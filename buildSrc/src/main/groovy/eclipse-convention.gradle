
import org.gradle.plugins.ide.eclipse.model.ProjectDependency
import org.gradle.plugins.ide.eclipse.model.SourceFolder

plugins {
  id 'eclipse'
  id 'com.diffplug.eclipse.apt'
}


if (project.rootProject != project) {
	if (tasks.findByName('cleanEclipseFactorypath')) {
	  project.rootProject.tasks['configureBuildship'].dependsOn(
	    tasks['cleanEclipseClasspath'],
	    tasks['cleanEclipseFactorypath'],
	    tasks['cleanEclipseJdtApt'],
	    tasks['cleanEclipseJdt'],
	    tasks['cleanEclipseProject'],
	    tasks['eclipseClasspath'],
	    tasks['eclipseFactorypath'],
	    tasks['eclipseJdtApt'],
	    tasks['eclipseProject'],
	    tasks['eclipseJdt'],
	  )  
	}
	else if (tasks.findByName('eclipseFactorypath')) {
	  project.rootProject.tasks['configureBuildship'].dependsOn(
	    tasks['eclipseClasspath'],
	    tasks['eclipseFactorypath'],
	    tasks['eclipseJdtApt'],
	    tasks['eclipseProject'],
	    tasks['eclipseJdt'],
	  )
	}
	else if (tasks.findByName('eclipseClasspath')) {
	  project.rootProject.tasks['configureBuildship'].dependsOn(
	    tasks['eclipseClasspath'],
	    tasks['eclipseJdtApt'],
	    tasks['eclipseProject'],
	    tasks['eclipseJdt'],
	  )
	}
}


eclipse {
  
  project {
    name = createProjectDisplayName()
  }
  
}

def createProjectDisplayName() {
  if (project == project.rootProject) {
    return project.name  
  }
  return "${project.rootProject.name}${project.path}"
}

