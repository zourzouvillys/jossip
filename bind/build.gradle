plugins {
  id 'java-library'
  id 'eclipse'
  id 'net.ltgt.apt-eclipse'
}

repositories {
  jcenter()
  maven { url 'https://jitpack.io' }
}

sourceCompatibility = 11
targetCompatibility = 11

java {
    withSourcesJar()
    withJavadocJar()
}


dependencies {
  implementation 'com.fasterxml.jackson.core:jackson-core:2.11.1'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
  api project(':parser')
  api 'com.google.guava:guava:29.0-jre'  
  implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
  implementation 'org.slf4j:slf4j-api:1.7.30'
  compileOnly 'org.immutables:value-annotations:2.8.8'
  annotationProcessor 'org.immutables:value:2.8.8'
  annotationProcessor 'com.google.auto.service:auto-service:1.0-rc7'
  implementation 'com.github.zourzouvillys.graphql:graphql-core:master-SNAPSHOT'
  implementation 'org.jeasy:easy-rules-core:4.0.0'
  implementation 'org.jeasy:easy-rules-mvel:4.0.0'
  implementation 'org.jeasy:easy-states:2.0.0'
}


dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}



test {
  useJUnitPlatform()
  minHeapSize = "128m"
  maxHeapSize = "2g"
}


tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

