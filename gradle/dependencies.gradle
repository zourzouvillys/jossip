
sourceCompatibility = 15
targetCompatibility = 15

repositories {
  jcenter()
  maven { url "https://dl.bintray.com/zourzouvillys/maven" }  
}

dependencies {
<<<<<<< Updated upstream

  implementation enforcedPlatform('software.amazon.awssdk:bom:2.15.81')
  implementation enforcedPlatform('com.fasterxml.jackson:jackson-bom:2.12.1')
  implementation enforcedPlatform('com.google.guava:guava-bom:30.0-jre')
  
  implementation enforcedPlatform('org.apache.logging.log4j:log4j-bom:2.14.0')
  implementation enforcedPlatform('io.netty:netty-bom:4.1.59.Final')
  implementation enforcedPlatform('net.openhft:chronicle-bom:2.21ea48')
  implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.1"))
=======
  implementation enforcedPlatform('software.amazon.awssdk:bom:2.17.2')
  implementation enforcedPlatform('com.fasterxml.jackson:jackson-bom:2.12.4')
  implementation enforcedPlatform('com.google.guava:guava-bom:30.1.1-jre')  
  implementation enforcedPlatform('org.apache.logging.log4j:log4j-bom:2.14.1')
  implementation enforcedPlatform('io.netty:netty-bom:4.1.66.Final')
  implementation enforcedPlatform("com.squareup.okhttp3:okhttp-bom:4.9.1")
}
>>>>>>> Stashed changes

  annotationProcessor(platform("io.micronaut:micronaut-bom:2.2.1"))  
  implementation(platform("io.micronaut:micronaut-bom:2.2.1"))

<<<<<<< Updated upstream
  testAnnotationProcessor(enforcedPlatform("io.micronaut:micronaut-bom:2.2.1"))  
  testImplementation(enforcedPlatform("io.micronaut:micronaut-bom:2.2.1"))
  testImplementation enforcedPlatform('org.junit:junit-bom:5.7.1')
  
=======
dependencies {
>>>>>>> Stashed changes
}


dependencies {
<<<<<<< Updated upstream
  //testImplementation "org.assertj:assertj-core:3.11.1"
  testImplementation 'org.assertj:assertj-core:3.19.0'
=======
  testImplementation enforcedPlatform('org.junit:junit-bom:5.7.2')
  testImplementation(platform('org.junit:junit-bom:5.7.2'))
  testImplementation 'org.assertj:assertj-core:3.20.2'
>>>>>>> Stashed changes
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

test {
  useJUnitPlatform()
  minHeapSize = "128m"
  maxHeapSize = "2g"
}


java {
<<<<<<< Updated upstream
    withSourcesJar()
    withJavadocJar()
=======
  withSourcesJar()
  toolchain {
    languageVersion = JavaLanguageVersion.of(11)
  }
  modularity.inferModulePath = true
}

tasks.named('compileJava') {
  // use the project's version or define one directly
  //options.javaModuleVersion = provider { project.version }
>>>>>>> Stashed changes
}

tasks.withType(JavaCompile) {
<<<<<<< Updated upstream
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
=======
  options.deprecation = true
>>>>>>> Stashed changes
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

