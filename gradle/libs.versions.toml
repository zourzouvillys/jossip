########################################################################################
[versions]
########################################################################################

jersey                  = "3.1.3"
immutables              = "2.9.3"
autoService             = "1.1.1"
netty                   = "4.1.98.Final"
jackson                 = "2.15.2"
picocli                 = "4.7.5"
resilience4j            = "2.1.0"
logback                 = "1.4.11"
opentelemetry           = "1.30.1"
slf4j                   = "2.0.9"
log4j                   = "2.20.0"
dagger                  = "2.48"
guava                   = "32.1.2-jre"
reactor                 = "3.6.1"
caffeine                = "3.1.8"
awssdk                  = "2.20.152"
rxjava3                 = "3.1.7"
grpc                    = "1.58.0"
protobuf                = "3.24.3"
bouncycastle            = "1.70"
eclipse-jdt-annotations = "2.2.700"
reactivestreams         = "1.0.4"
rxgrpc                  = "1.2.4"

########################################################################################
[libraries]
########################################################################################


reactivestreams = { module = "org.reactivestreams:reactive-streams", version.ref = "reactivestreams" }

eclipse-jdt-annotations = { module = "org.eclipse.jdt:org.eclipse.jdt.annotation", version.ref = "eclipse-jdt-annotations" }

jersey-bom = { module = "org.glassfish.jersey:jersey-bom", version.ref = "jersey" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

##

immutables-valueProcessor = { module = "org.immutables:value", version.ref = "immutables" }
immutables-valueAnnotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }

##

autoService = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }

##

netty-bom = { module = "io.netty:netty-bom", version.ref = "netty" }
netty-transport = { module = "io.netty:netty-transport", version.ref = "netty" }
netty-buffer = { module = "io.netty:netty-buffer", version.ref = "netty" }
netty-codec = { module = "io.netty:netty-codec", version.ref = "netty" }
netty-handler = { module = "io.netty:netty-handler", version.ref = "netty" }
netty-testsuite = { module = "io.netty:netty-testsuite", version.ref = "netty" }
netty-resolver-dns = { module = "io.netty:netty-resolver-dns", version.ref = "netty" }

##

jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }

##

picocli = { module = "info.picocli:picocli", version.ref = "picocli" }

##

guava = { module = "com.google.guava:guava", version.ref = "guava" }

##

resilience4j-bom = { module = "io.github.resilience4j:resilience4j-bom", version.ref = "resilience4j" }

resilience4j-ratelimiter = { module = "io.github.resilience4j:resilience4j-ratelimiter", version.ref = "resilience4j" }
resilience4j-timelimiter = { module = "io.github.resilience4j:resilience4j-timelimiter", version.ref = "resilience4j" }
resilience4j-retry = { module = "io.github.resilience4j:resilience4j-retry", version.ref = "resilience4j" }
resilience4j-circularbuffer = { module = "io.github.resilience4j:resilience4j-circularbuffer", version.ref = "resilience4j" }
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-cache = { module = "io.github.resilience4j:resilience4j-cache", version.ref = "resilience4j" }
resilience4j-bulkhead = { module = "io.github.resilience4j:resilience4j-bulkhead", version.ref = "resilience4j" }
resilience4j-annotations = { module = "io.github.resilience4j:resilience4j-annotations", version.ref = "resilience4j" }


opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry" }

opentelemetry-sdk-extension-autoconfigure = { module = "io.opentelemetry:opentelemetry-sdk-extension-autoconfigure", version.ref = "opentelemetry" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }

log4j-bom = { module = "org.apache.logging.log4j:log4j-bom", version.ref = "log4j" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }


dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" } 
dagger-spi = { module = "com.google.dagger:dagger-spi", version.ref = "dagger" } 
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" } 

## the jakarta version 1 uses the javax package
javax-inject = "jakarta.inject:jakarta.inject-api:2.0.1"

## the jakarta version 1 uses the javax package
javax-annotation = "jakarta.annotation:jakarta.annotation-api:2.1.1"

##
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor" }

##
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }

##
awssdk-bom = { module = "software.amazon.awssdk:bom", version.ref = "awssdk" }

##
rxjava3 = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava3" }
rxjava3-jdk9interop = { module = "com.github.akarnokd:rxjava3-jdk9-interop", version = "3.0.1" }


##
grpc-bom = { module = "io.grpc:grpc-bom", version.ref = "grpc" }
grpc-protocGenRpcJava = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" } 

      
##

protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }



##
bouncycastle-bcpkix = { module = 'org.bouncycastle:bcpkix-jdk15on', version.ref = 'bouncycastle' }


