syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.rtcore.gateway.proto";
option java_outer_classname = "GatewayProto";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

package rtcore.gateway.v1;

/**
 * SIP exchange message.
 */

message SipExchangeRequest {

  // the message to exchange.
  SipRequest frame = 1;

  // the connection ID this request was received on (for incoming), or that it should be sent on (for outgoing).
  string connection_id = 2;

}

/**
 * a SIP message exchange communicates the status of the exchange along with any responses or connection
 * failures via a stream of SipExchangeEvent messages.  The SIP responses will follow the standard SIP 
 * response logic, and will be sent in order.enum
 * 
 * The exchange will complete once the SIP transaction is complete.
 */

message SipExchangeReply {
  oneof event {
    SipResponse frame = 1;
  }
}


// provides a way to send and receive SIP messages over SIP transports.
service SipServer {

  // transmits a SIP request (non INVITE) and returns the response, or error.
  rpc Exchange(SipExchangeRequest) returns (stream SipExchangeReply) {}

}

message SipBody {

  bytes binary = 1;

}


message SipHeader {
  string name = 1;
  repeated string values = 2;
}

message SipRequest {
  string method = 1;
  string uri = 2;
  repeated SipHeader headers = 3;
  SipBody body = 4;
}


message SipResponse {
  uint32 status_code = 1;
  string reason_phrase = 2;
  repeated SipHeader headers = 3;
  SipBody body = 4;
  google.protobuf.Struct attributes = 5;
}
