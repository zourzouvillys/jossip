
plugins {
  id 'io.rtcore.java'
  id 'io.rtcore.immutables'
  id 'com.google.cloud.tools.jib'
  id 'com.ryandens.javaagent-application'
  id 'com.ryandens.javaagent-jib'
  id 'application'
}

description = 'RTCore SIP: Protocol Gateway'


dependencies {
  implementation 'com.google.dagger:dagger:2.44.2'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.44.2'
  implementation 'info.picocli:picocli:4.7.0'
  implementation 'com.google.guava:guava:31.1-jre'
  implementation 'org.slf4j:slf4j-api:2.0.3'
  implementation project(':gateway-api')
  implementation project(':sip-channels')
  implementation project(':sip-channels-netty')
  implementation 'jakarta.inject:jakarta.inject-api:1.0.5'
}

dependencies {
  implementation 'org.slf4j:slf4j-api:2.0.3'
  implementation 'org.slf4j:jul-to-slf4j:2.0.3'
  runtimeOnly 'ch.qos.logback:logback-classic:1.4.4'
  runtimeOnly 'net.logstash.logback:logstash-logback-encoder:7.2'
  //javaagent 'com.datadoghq:dd-java-agent:0.115.0'
  
  //
  implementation 'org.zalando:problem:0.27.1'
  implementation 'org.zalando:jackson-datatype-problem:0.27.1'
  
}

dependencies {

  implementation platform('org.glassfish.jersey:jersey-bom:3.1.0')

  implementation 'org.glassfish.grizzly:grizzly-npn-api:2.0.0'
  implementation 'org.glassfish.grizzly:grizzly-websockets:4.0.0'
  implementation 'org.glassfish.grizzly:grizzly-http2:4.0.0'
  
  
  implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http'
  implementation 'org.glassfish.jersey.inject:jersey-hk2'
  implementation 'org.glassfish.jersey.media:jersey-media-json-jackson'
  implementation 'org.glassfish.jersey.media:jersey-media-sse'
  implementation 'org.glassfish.jersey.ext:jersey-bean-validation'
  
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  implementation 'com.sun.xml.bind:jaxb-osgi:3.0.2'
  
  implementation platform('com.fasterxml.jackson:jackson-bom:2.14.2')
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-toml'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
  
  testImplementation 'org.glassfish.jersey.test-framework:jersey-test-framework-core'
  testImplementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2'
}

testing {
  suites {
    test {
      useJUnitJupiter('5.9.1')
    }
  }
}

dependencies {
  testImplementation(platform('org.junit:junit-bom:5.9.1'))
  testImplementation('org.junit.jupiter:junit-jupiter')
  testImplementation('org.assertj:assertj-core:3.23.1')
  testImplementation('org.awaitility:awaitility:4.2.0')
  testImplementation 'io.reactivex.rxjava3:rxjava:3.1.5'
  testImplementation 'com.github.akarnokd:rxjava3-jdk9-interop:3.0.0'
  testImplementation 'com.google.truth:truth:1.1.3'
  testImplementation 'com.google.truth.extensions:truth-java8-extension:1.1.3'
  testImplementation 'com.google.truth.extensions:truth-re2j-extension:1.1.3'  
  testImplementation 'org.mockito:mockito-junit-jupiter:4.8.1'
}





application {
  applicationName = 'rtcore-gateway'
  mainClass = 'io.rtcore.gateway.EntryPoint'
  applicationDefaultJvmArgs = [
  ]
}


jib {

  from {
    image = 'public.ecr.aws/amazoncorretto/amazoncorretto:19'
    platforms {
      platform {
        architecture = 'amd64'
        os = 'linux'
      }
      /*
      platform {
        architecture = 'arm64'
        os = 'linux'
      }
      */
    }
  }
  
  to {
    //image = 'xxx'
    // credHelper = 'ecr-login'
    tags = [ 'latest' ]
  }
  
  container {
    mainClass = 'io.rtcore.gateway.EntryPoint'
    jvmFlags = [ ]
    ports = [ '80/tcp' ]
  }

}

