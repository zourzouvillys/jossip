
plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'  
}

dependencies {
  api project(':sip-message')
  api project(':sip-parser')
  api 'org.reactivestreams:reactive-streams:1.0.3'
  implementation 'com.google.guava:guava:30.1.1-jre'
  implementation 'io.reactivex.rxjava3:rxjava:3.1.0'
}

dependencies {
  compileOnly 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.600'
}
  
dependencies {
  compileOnly 'org.immutables:value-annotations:2.8.8'
  annotationProcessor 'org.immutables:value:2.8.8'
  annotationProcessor 'com.google.auto.service:auto-service:1.0'
}


dependencies {
  testImplementation(platform('org.junit:junit-bom:5.7.2'))
  testImplementation('org.junit.jupiter:junit-jupiter')
  testImplementation('org.assertj:assertj-core:3.20.2')
  testImplementation('org.awaitility:awaitility:4.1.0')
  testImplementation 'io.reactivex.rxjava3:rxjava:3.1.0'
  testImplementation 'com.github.akarnokd:rxjava3-jdk9-interop:3.0.0'
  testImplementation 'com.google.truth:truth:1.1.3'
  testImplementation 'com.google.truth.extensions:truth-java8-extension:1.1.3'
  testImplementation 'com.google.truth.extensions:truth-re2j-extension:1.1.3' 
  testRuntimeOnly project(':sip-channels-netty')
}

jar {
  baseName = 'sip-channels'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(16)
  }
  //withJavadocJar()
  //withSourcesJar()
  modularity.inferModulePath = true
}

tasks.named('test') {
  useJUnitPlatform()
  testLogging {
    events 'failed', 'skipped', 'passed'
    exceptionFormat 'full'
    // set options for log level DEBUG
    debug {
      events "started", "skipped", "failed"
      exceptionFormat "full"
    }
    // remove standard output/error logging from --info builds
    info.events = ["failed", "skipped"]  
    displayGranularity = 2
    showStackTraces = true
    showExceptions = true
    showCauses = true
    outputs.upToDateWhen {false}
    showStandardStreams = true
  }
}

sourceSets {
  main {
    java {
      // eclipse adds this in, and uses a different path - so should we add?
      // srcDir "${buildDir}/generated/sources/annotationProcessor/java/main"
    }
  }
}

tasks.named('javadoc') {
  options.addStringOption('Xdoclint:none', '-quiet')   											     											  
  options.addBooleanOption("html5", true)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  baseName = 'sip-channels'
  from javadoc
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  baseName = 'sip-channels'
  from sourceSets.main.allSource
}


artifacts {
  archives sourcesJar
  archives javadocJar
}

signing {
  useGpgCmd()
  sign publishing.publications
}

publishing {

  publications {
  
    mavenJava(MavenPublication) {
    
      artifactId jar.baseName
      from components.java
      
      artifact sourcesJar {
        classifier = 'sources'
      }
      
      artifact javadocJar {
        classifier = 'javadoc'
      }
      
      pom {
        name = 'sip-channels'
        packaging = 'jar'
        description = 'Java Open Source SIP'
        url = 'https://github.com/zourzouvillys/jossip/'
        
        scm {
          connection = 'scm:git:https://github.com/zourzouvillys/jossip.git'
          developerConnection = 'scm:git:https://github.com/zourzouvillys/jossip.git'
          url = 'https://github.com/zourzouvillys/jossip'
        }
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'zourzouvillys'
            name = 'Theo Zourzouvillys'
            email = 'theo@zrz.io'
          }
        }
      }
    }
  }

  repositories {
  /*
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/zourzouvillys/jossip"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
    */
    maven {
      url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
      // url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
      credentials {
        username ossrhUsername
        password ossrhPassword
      }
    }
  }
  
  
}
